<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--  启用注解扫描  -->
    <context:component-scan base-package="com.mmall" annotation-config="true"/>

    <!-- 配置spring文件的时候分离出去的一些常量  -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <!--  数据库连接池  -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--  连接池启动时的初始值  -->
        <property name="initialSize" value="${db.initialSize}"/>
        <!--  连接池的最大值  -->
        <property name="maxActive" value="${db.maxActive}"/>
        <!--  最大空闲值，当经过一个高峰时间后，连接池可以慢慢的将已经用不到的连接慢慢释放一部分，一直到maxIdle为止  -->
        <property name="maxIdle" value="${db.maxIdle}"/>
        <!--  最大空闲值，当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰时来不及申请  -->
        <property name="minIdle" value="${db.minIdle}"/>
        <!--  最大建立连接的等待时间。如果超过此时间将连接到异常处理。设为-1表示无限制  -->
        <property name="maxWait" value="${db.maxWait}"/>
        <!--  给出一条简单的sql语句进行验证  -->
        <!--  <property name="validationQuery" value="select getdate()"/>  -->
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <!--  回收被遗弃的（一般是忘了释放的） 数据库连接到连接中  -->
        <!--  <property name="removeAbandoned" value="true"/>  -->
        <!--  数据库连接过多长时间不用被视为被遗弃而收回连接池中  -->
        <!--  <property name="removeAbandonedTimeout" value="120"/>  -->
        <!-- 连接的超过世间，默认为半个小时  -->
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/><!--  name的值是对应SqlSessionFactoryBean里的属性，ref值指的是上面bean  id="dataSource"  -->
        <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml"/><!--  读取所有的mybatis的sql实现  -->

        <!--  分页插件  -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--  方言  -->
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--  MYBATIS的一个包扫描  -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mmall.dao"/>
    </bean>

    <!--  使用@Transactional进行声明式事务管理需要声明下面这行  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--  事务管理  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/><!--  提交事务失败，回滚  -->
    </bean>
</beans>